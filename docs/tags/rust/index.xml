<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust on Andrew Moa Blog Site</title>
    <link>https://andrewmoa.site/tags/rust/</link>
    <description>Recent content in Rust on Andrew Moa Blog Site</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <managingEditor>andrew.moa2005@163.com (Andrew Moa)</managingEditor>
    <webMaster>andrew.moa2005@163.com (Andrew Moa)</webMaster>
    <copyright>Andrew Moa</copyright>
    <lastBuildDate>Thu, 26 Jun 2025 14:49:54 +0800</lastBuildDate>
    <atom:link href="https://andrewmoa.site/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Matrix multiplication operation (I) - using OpenMP to speed up loop calculation</title>
      <link>https://andrewmoa.site/post/2025-06-23-matrix_multiplication-1/</link>
      <pubDate>Mon, 23 Jun 2025 00:00:00 +0000</pubDate><author>andrew.moa2005@163.com (Andrew Moa)</author>
      <guid>https://andrewmoa.site/post/2025-06-23-matrix_multiplication-1/</guid>
      <description>&lt;p&gt;Speaking of matrices, anyone who studies science and engineering will think of the fear of being dominated by linear algebra classes. Matrix multiplication operations are indispensable for various industrial and scientific research numerical calculations, and are also used in various benchmarking software. The time consumption of matrix multiplication operations is also an important indicator for judging the floating-point operation performance of computers. The purpose of this article is to verify the performance differences of various implementation methods through matrix multiplication operations, and compare the performance differences of different computing platforms to provide a reference for high-performance computing development.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exploring Rust Graphical Interface Libraries</title>
      <link>https://andrewmoa.site/post/2025-06-11-rust_gui/</link>
      <pubDate>Wed, 11 Jun 2025 00:00:00 +0000</pubDate><author>andrew.moa2005@163.com (Andrew Moa)</author>
      <guid>https://andrewmoa.site/post/2025-06-11-rust_gui/</guid>
      <description>&lt;p&gt;Recently, I plan to refactor the code I wrote previously using Rust, which involves the question of how to choose a GUI interface. Rust has only been officially released for ten years, and is not as good as the old C/C++ in GUI development. There are many well-known and time-tested GUI interface libraries such as wxWidgets, qt, gtk+, etc. This article selects several Rust GUI libraries and simply implements a boundary layer calculator for horizontal comparison.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
