<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Star-Ccm&#43; on Andrew Moa Blog Site</title>
    <link>https://andrewmoa.site/tags/star-ccm&#43;/</link>
    <description>Recent content in Star-Ccm&#43; on Andrew Moa Blog Site</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <managingEditor>andrew.moa2005@163.com (Andrew Moa)</managingEditor>
    <webMaster>andrew.moa2005@163.com (Andrew Moa)</webMaster>
    <copyright>Andrew Moa</copyright>
    <lastBuildDate>Tue, 29 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://andrewmoa.site/tags/star-ccm+/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Use VSCode to develop STAR-CCM&#43; user library: Calculate physical properties through CoolProp</title>
      <link>https://andrewmoa.site/post/2025-04-29-use-vscode-develop-starccm-user-library-with-coolprop/</link>
      <pubDate>Tue, 29 Apr 2025 00:00:00 +0000</pubDate><author>andrew.moa2005@163.com (Andrew Moa)</author>
      <guid>https://andrewmoa.site/post/2025-04-29-use-vscode-develop-starccm-user-library-with-coolprop/</guid>
      <description>&lt;p&gt;STAR-CCM+ user program (user library)&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; is a dynamic link library compiled and constructed according to certain rules by an external compiler (usually C/C++, but also supports Fortran in Linux). By registering the constructed dynamic link library in the sim file, certain custom functions can be implemented. A user library usually contains one or more user-defined functions, which are generally used to implement special configuration or field functions.&lt;/p&gt;&#xA;&lt;p&gt;Uer library need to register dynamic link libraries before they can be called, and the format of dynamic link libraries is often closely related to the operating system, hardware platform, etc. Therefore, user library are usually compiled for specific platforms and cannot run across platforms.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Develop STAR-CCM&#43; simulation assistant using VSCode</title>
      <link>https://andrewmoa.site/post/2025-04-22-use-vscode-coding-starccm-assistant/</link>
      <pubDate>Tue, 22 Apr 2025 00:00:00 +0000</pubDate><author>andrew.moa2005@163.com (Andrew Moa)</author>
      <guid>https://andrewmoa.site/post/2025-04-22-use-vscode-coding-starccm-assistant/</guid>
      <description>&lt;p&gt;The STAR-CCM+ Simulation Assistant is equivalent to a plug-in that encapsulates Java macro commands. By calling macro commands, some procedural operations are performed. Compared with directly executing Java macro files, it can interact with users better and is obviously more friendly to users who are not familiar with Java. Because the simulation assistant is mostly used in pre- and post-processing, many consulting companies tend to adopt the same approach when developing customized plug-ins for this purpose.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Debug STAR-CCM&#43; macros with VSCode</title>
      <link>https://andrewmoa.site/post/2025-04-18-use-vscode-debug-starccm-marco/</link>
      <pubDate>Fri, 18 Apr 2025 00:00:00 +0000</pubDate><author>andrew.moa2005@163.com (Andrew Moa)</author>
      <guid>https://andrewmoa.site/post/2025-04-18-use-vscode-debug-starccm-marco/</guid>
      <description>&lt;p&gt;As mentioned earlier, the recording and writing of STAR-CCM+ macro files are essentially Java files, so it can be developed and debugged using Java programming methods. If complex business scenarios are involved, additional functions need to be added. The program itself is relatively complex, and it is difficult to wait until the entire program is written before testing it. It is inevitable to debug during the development process. The development tool used by the official document is the old version of &lt;strong&gt;NetBeans&lt;/strong&gt;. Many functions have changed. In addition, the official document description is too simple. Most people are still confused about the debugging process of STAR-CCM+ after reading it.&lt;a href=&#34;https://code.visualstudio.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;VSCode&lt;/strong&gt;&lt;/a&gt;&#xA; As a leader in emerging IDE, you can not only support Java programming through expansion, but also &lt;a href=&#34;https://copilot.microsoft.com/chats/Uz4t8yZbNmpyo1CVtqKWP&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;copilot&lt;/strong&gt;&lt;/a&gt;&#xA; To expand the integrated powerful AI programming capabilities, this article uses &lt;strong&gt;VSCode&lt;/strong&gt; to demonstrate the debugging process of STAR-CCM+ macro files.&lt;/p&gt;</description>
    </item>
    <item>
      <title>STAR-CCM&#43; macro file recording and writing</title>
      <link>https://andrewmoa.site/post/2025-04-17-starccm-record-and-write-marco/</link>
      <pubDate>Thu, 17 Apr 2025 00:00:00 +0000</pubDate><author>andrew.moa2005@163.com (Andrew Moa)</author>
      <guid>https://andrewmoa.site/post/2025-04-17-starccm-record-and-write-marco/</guid>
      <description>&lt;p&gt;STAR-CCM+ macro is essentially a java file, and the syntax is no different from ordinary java. Using macros can help us simplify the processing process, especially some repetitive process operations. Completing some process operations by writing macro files can greatly liberate human resources, and even complete certain operations during the solution process.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-record-macros&#34;&gt;1. Record macros&lt;/h2&gt;&#xA;&lt;p&gt;The essence of STAR-CCM+ macro is a collection of various operation commands in the analysis process. Instead of explaining the complex and cumbersome java syntax + API from scratch, it is better to start with engineering issues directly.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PowerShell编写STAR-CCM&#43;自动排队计算脚本</title>
      <link>https://andrewmoa.site/post/2025-03-25-posershell-starccm-script/</link>
      <pubDate>Tue, 25 Mar 2025 00:00:00 +0000</pubDate><author>andrew.moa2005@163.com (Andrew Moa)</author>
      <guid>https://andrewmoa.site/post/2025-03-25-posershell-starccm-script/</guid>
      <description>&lt;p&gt;When I used STAR-CCM+ to do calculations on a Windows workstation, sometimes I had to submit more than ten or twenty computing tasks in one night. Of course, it was impossible to run more than ten tasks at the same time, and it was impossible to watch it run and submit them manually one by one. A few years ago, I wrote this simple queue calculation template using PowerShell, and I share it with you here.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deploy STAR-CCM&#43; on supercomputing platform</title>
      <link>https://andrewmoa.site/post/2022-04-08-deploy-starccm-on-scp/</link>
      <pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate><author>andrew.moa2005@163.com (Andrew Moa)</author>
      <guid>https://andrewmoa.site/post/2022-04-08-deploy-starccm-on-scp/</guid>
      <description>&lt;p&gt;Recently, there are many platforms that provide supercomputing trials, and many platforms have free trial applications. Due to work needs, I applied for an account on a supercomputing platform and conducted related trials. I made a simple record of the process of deploying STAR-CCM+ software and applications on the supercomputing platform, which also provides a reference for subsequent related applications.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-supercomputer-platform-information&#34;&gt;1. Supercomputer platform information&lt;/h2&gt;&#xA;&lt;p&gt;You can log in to the supercomputer remotely through SSH connection. Some platforms also provide webSSH and webVNC connections, which support connecting to the command line or graphical interface through a browser. For specific login methods, please refer to the relevant documents provided by the platform.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Solver Verification Comparison - Laminar Flow Between Rotating and Static Concentric Cylinders</title>
      <link>https://andrewmoa.site/post/2021-08-14-solver-verification-comparison/</link>
      <pubDate>Sat, 14 Aug 2021 00:00:00 +0000</pubDate><author>andrew.moa2005@163.com (Andrew Moa)</author>
      <guid>https://andrewmoa.site/post/2021-08-14-solver-verification-comparison/</guid>
      <description>&lt;p&gt;This paper uses different CFD solvers to verify the laminar flow problem. Verify the accuracy of each solver by listing the operating procedures and differences in the output results of different solvers.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-problem-description&#34;&gt;1. Problem description&lt;/h2&gt;&#xA;&lt;p&gt;As shown in the figure below, a fixed-constant laminar flow model between two concentric cylinders is established. The flow is caused by the rotation of the inner cylinder at a constant angular velocity, while the outer cylinder remains stationary. Using periodic boundaries, only a portion of the basin needs to be modeled. The physical model and input data are shown in the following table.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
