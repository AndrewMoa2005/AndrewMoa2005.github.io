<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rust on Andrew Moa Blog Site</title>
    <link>https://andrewmoa.site/zh-cn/tags/rust/</link>
    <description>Recent content in Rust on Andrew Moa Blog Site</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <managingEditor>andrew.moa2005@163.com (Andrew Moa)</managingEditor>
    <webMaster>andrew.moa2005@163.com (Andrew Moa)</webMaster>
    <copyright>Andrew Moa</copyright>
    <lastBuildDate>Wed, 11 Jun 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://andrewmoa.site/zh-cn/tags/rust/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rust图形界面库初探</title>
      <link>https://andrewmoa.site/zh-cn/post/2025-06-11-rust_gui/</link>
      <pubDate>Wed, 11 Jun 2025 00:00:00 +0000</pubDate><author>andrew.moa2005@163.com (Andrew Moa)</author>
      <guid>https://andrewmoa.site/zh-cn/post/2025-06-11-rust_gui/</guid>
      <description>&lt;p&gt;最近打算用rust把以前写的代码重构一下，涉及到GUI界面怎么选择的问题。rust正式发布不过十年光景，在GUI开发这方面还不如老牌的C/C++，有诸如wxWidgets、qt、gtk+等众多知名又久经考验的GUI界面库。本文选取几款rust的GUI库，简单实现一个边界层计算器，做个横向对比。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-slint&#34;&gt;1. slint&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://slint.dev/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;slint&lt;/a&gt;&#xA;近期的宣传不可谓不卖力，号称要打造成下一代gui工具包，看来野心不小。slint通过自定义的声明式语言定义ui界面，在vscode下编程可以通过插件预览，也可以通过官方的&lt;a href=&#34;https://slintpad.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;slintpad&lt;/a&gt;&#xA;网站预览。&lt;/p&gt;&#xA;&lt;p&gt;cargo配置文件如下，&lt;code&gt;slint-build&lt;/code&gt;用于将&lt;code&gt;.slint&lt;/code&gt;界面文件翻译成&lt;code&gt;.rs&lt;/code&gt;文件。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;package&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;sLayers-rs&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;version&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;0.1.0&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;edition&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;2024&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;dependencies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;slint&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1.8.0&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;build-dependencies&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;slint-build&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1.8.0&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;profile&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;release&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;strip&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;opt-level&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;z&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;lto&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;codegen-units&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;panic&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;abort&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ui界面文件&lt;code&gt;dialog.slint&lt;/code&gt;。slint可以把需要调用的参数定义到ui界面中，并自动隐式生成&lt;code&gt;set_&lt;/code&gt;和&lt;code&gt;get_&lt;/code&gt;方法用于在rs文件中设置这些参数的值。同样的，界面中定义的回调函数也会自动隐式生成&lt;code&gt;on_&lt;/code&gt;方法，用于在rs文件中调用。需要注意的是，在rs中更新了ui界面中的参数，关联的控件并不会自动更新显示，需要手动更新控件显示。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import { Button, LineEdit, SpinBox, CheckBox, GridBox, VerticalBox } from &amp;#34;std-widgets.slint&amp;#34;;&#xA;&#xA;export component Dialog inherits Window {&#xA;    title: &amp;#34;Layers&amp;#34;;&#xA;    in-out property &amp;lt;string&amp;gt; tt: &amp;#34;3.0&amp;#34;;&#xA;    in-out property &amp;lt;int&amp;gt; nl: 5;&#xA;    in-out property &amp;lt;string&amp;gt; ft: &amp;#34;0.3&amp;#34;;&#xA;    in-out property &amp;lt;string&amp;gt; gr: &amp;#34;1.5&amp;#34;;&#xA;    callback calculate_first_thickness();&#xA;    callback calculate_num_layers();&#xA;    callback calculate_growth_rate();&#xA;    callback calculate_total_thickness();&#xA;&#xA;    callback calculate_value();&#xA;    VerticalBox {&#xA;        Text {&#xA;            text: &amp;#34;Calculate fluid boundary layer parameters.\nCalculate the selected parameters based on the others.&amp;#34;;&#xA;        }&#xA;&#xA;        GridBox {&#xA;            Row {&#xA;                b_t := CheckBox {&#xA;                    text: &amp;#34;Total thickness (mm)&amp;#34;;&#xA;                    checked: true;&#xA;                    enabled: !self.checked;&#xA;                    toggled() =&amp;gt; {&#xA;                        if self.checked {&#xA;                            b_n.checked = false;&#xA;                            b_f.checked = false;&#xA;                            b_g.checked = false;&#xA;                        }&#xA;                    }&#xA;                }&#xA;&#xA;                e_t := LineEdit {&#xA;                    text: root.tt;&#xA;                    input-type: decimal;&#xA;                    read-only: b_t.checked;&#xA;                }&#xA;            }&#xA;&#xA;            Row {&#xA;                b_n := CheckBox {&#xA;                    text: &amp;#34;Number of layers&amp;#34;;&#xA;                    checked: false;&#xA;                    enabled: !self.checked;&#xA;                    toggled() =&amp;gt; {&#xA;                        if self.checked {&#xA;                            b_t.checked = false;&#xA;                            b_f.checked = false;&#xA;                            b_g.checked = false;&#xA;                        }&#xA;                    }&#xA;                }&#xA;&#xA;                e_n := SpinBox {&#xA;                    value: root.nl;&#xA;                    minimum: 1;&#xA;                }&#xA;            }&#xA;&#xA;            Row {&#xA;                b_f := CheckBox {&#xA;                    text: &amp;#34;First thickness (mm)&amp;#34;;&#xA;                    checked: false;&#xA;                    enabled: !self.checked;&#xA;                    toggled() =&amp;gt; {&#xA;                        if self.checked {&#xA;                            b_n.checked = false;&#xA;                            b_t.checked = false;&#xA;                            b_g.checked = false;&#xA;                        }&#xA;                    }&#xA;                }&#xA;&#xA;                e_f := LineEdit {&#xA;                    text: root.ft;&#xA;                    input-type: decimal;&#xA;                    read-only: b_f.checked;&#xA;                }&#xA;            }&#xA;&#xA;            Row {&#xA;                b_g := CheckBox {&#xA;                    text: &amp;#34;Growth rate&amp;#34;;&#xA;                    checked: false;&#xA;                    enabled: !self.checked;&#xA;                    toggled() =&amp;gt; {&#xA;                        if self.checked {&#xA;                            b_n.checked = false;&#xA;                            b_f.checked = false;&#xA;                            b_t.checked = false;&#xA;                        }&#xA;                    }&#xA;                }&#xA;&#xA;                e_g := LineEdit {&#xA;                    text: root.gr;&#xA;                    input-type: decimal;&#xA;                    read-only: b_g.checked;&#xA;                }&#xA;            }&#xA;        }&#xA;&#xA;        Button {&#xA;            text: &amp;#34;Calculate&amp;#34;;&#xA;            clicked =&amp;gt; {&#xA;                root.tt = e_t.text;&#xA;                root.nl = e_n.value;&#xA;                root.ft = e_f.text;&#xA;                root.gr = e_g.text;&#xA;                if b_t.checked {&#xA;                    root.calculate_total_thickness();&#xA;                } else if b_n.checked {&#xA;                    root.calculate_num_layers();&#xA;                } else if b_f.checked {&#xA;                    root.calculate_first_thickness();&#xA;                } else if b_g.checked {&#xA;                    root.calculate_growth_rate();&#xA;                }&#xA;                e_t.text = root.tt;&#xA;                e_g.text = root.gr;&#xA;                e_f.text = root.ft;&#xA;                e_n.value = root.nl;&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;build.rs&lt;/code&gt;构建脚本调用&lt;code&gt;slint-build&lt;/code&gt;将&lt;code&gt;.slint&lt;/code&gt;文件翻译成&lt;code&gt;.rs&lt;/code&gt;文件。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
